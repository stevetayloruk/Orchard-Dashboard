angular.module("ui.sortable",[]).value("uiSortableConfig",{}).directive("uiSortable",["uiSortableConfig","$timeout","$log",function(n,t,i){return{require:"?ngModel",link:function(r,u,f,e){function c(n,t){return t&&typeof t=="function"?function(i,r){n(i,r);t(i,r)}:n}var s,h={},o={receive:null,remove:null,start:null,stop:null,update:null};angular.extend(h,n);e?(r.$watch(f.ngModel+".length",function(){t(function(){u.sortable("refresh")})}),o.start=function(n,t){t.item.sortable={index:t.item.index()}},o.activate=function(){s=u.contents();var n=u.sortable("option","placeholder");n&&n.element&&(s=s.not(u.find("."+n.element().attr("class").split(/\s+/).join("."))))},o.update=function(n,t){t.item.sortable.received||(t.item.sortable.dropindex=t.item.index(),u.sortable("cancel"));s.detach().appendTo(u);t.item.sortable.received&&r.$apply(function(){e.$modelValue.splice(t.item.sortable.dropindex,0,t.item.sortable.moved)})},o.stop=function(n,t){!t.item.sortable.received&&"dropindex"in t.item.sortable&&r.$apply(function(){e.$modelValue.splice(t.item.sortable.dropindex,0,e.$modelValue.splice(t.item.sortable.index,1)[0])})},o.receive=function(n,t){t.item.sortable.received=!0},o.remove=function(n,t){r.$apply(function(){t.item.sortable.moved=e.$modelValue.splice(t.item.sortable.index,1)[0]})},r.$watch(f.uiSortable,function(n){angular.forEach(n,function(n,t){o[t]&&(n=c(o[t],n));u.sortable("option",t,n)})},!0),angular.forEach(o,function(n,t){h[t]=c(n,h[t])})):i.info("ui.sortable: ngModel not provided!",u);u.sortable(h)}}}]);
/*
//# sourceMappingURL=sortable.min.js.map
*/